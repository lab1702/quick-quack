# Production Docker Compose configuration
version: '3.8'

services:
  duckdb-macro-rest:
    image: duckdb-macro-rest:latest
    ports:
      - "8000:8000"
    environment:
      - DUCKDB_REST_LOG_LEVEL=INFO
      - DUCKDB_REST_JSON_LOGGING=true
      - DUCKDB_REST_ENVIRONMENT=production
      - DUCKDB_REST_DATABASE_PATH=/app/data/database.duckdb
      - DUCKDB_REST_HOST=0.0.0.0
      - DUCKDB_REST_PORT=8000
      - DUCKDB_REST_WORKERS=4
    volumes:
      - ./data:/app/data:ro  # Mount database as read-only
      - ./logs:/app/logs     # Mount logs directory
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    networks:
      - duckdb-network

  # Reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - duckdb-macro-rest
    restart: unless-stopped
    networks:
      - duckdb-network

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - duckdb-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    restart: unless-stopped
    networks:
      - duckdb-network

  # Log aggregation
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - duckdb-network

networks:
  duckdb-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  loki-data:
